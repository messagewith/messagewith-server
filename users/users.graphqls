type User {
    id: ID!
    firstName: String!
    lastName: String!
    middleName: String
    fullName: String!
    nickname: String!
    email: String!
}

input UserInput {
    firstName: String!
    middleName: String
    lastName: String!
    password: String!
    nickname: String
    email: String!
}

input UserFilter {
    firstName: String
    lastName: String
    email: String
    fullName: String
}

extend type Query {
    users(filter: UserFilter): [User]
    user(id: String, email: String): User
}

extend type Mutation {
    createUser(userInput: UserInput!): User!
    changeUserPassword(email: String!, token: String!, newPassword: String!): User
    generateChangeUserPasswordToken(email: String!): String
}

